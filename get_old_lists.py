def get_genera():
    genera = ['Bacteroides', 'Prevotella', 'Akkermansia', 'Anaerostripes', 'Anaerotruncas', 'Barnesiella', 'Blautia', 'Roseburia', 'Alloprevotella', 'Porphyromonas', 'Paraprevotella', 'Parabacteroides', 'Oscillibacter', 'Odoribacter', 'Faecalibacterium', 'Enterobacter', 'Shuttleworthia', 'Sediminibacterium', 'Peptoniphilus', 'Moryella', 'Holdemania', 'Gordonibacter', 'Dorea', 'Sutterella', 'Sporobacter', 'Pseudoflavonifractor', 'Flavonifractor', 'Achromobacter', 'Aerococcus', 'Catenibacterium', 'Collinsella', 'Aggregatibacter', 'Anaerococcus', 'Succinivibrio', 'Lachnospira', 'Parasutterella', 'Paralactobacillus', 'Oribacterium', 'Ochrobactrum', 'Murdochiella', 'Mogibacterium', 'Megasphaera', 'Hallella', 'Johnsonella', 'Granulicatella', 'Gemmiger', 'Gardnerella', 'Facklamia', 'Enterococcus', 'Dialister', 'Delftia', 'Cronobacter', 'Citrobacter', 'Chryseobacterium', 'Centipeda', 'Butyricicoccus', 'Bulleidia', 'Brevundimonas', 'Anaeroglobus', 'Arthrobacter', 'Atopobium', 'Bacillus', 'Butyricimonas', 'Deinococcus', 'Helicobacter', 'Microbacterium', 'Pseudobutyrivibrio', 'Schwartzia', 'Succiniclasticum', 'Tannerella', 'Alistipes', 'Catonella', 'Kingella', 'Eremococcus', 'Variovorax', 'Slackia', 'Pyramidobacter', 'Abiotrophia', 'Bordetella', 'Parascardovia', 'Olsenella', 'Jonquetella', 'Xylanibacter', 'Eikenella', 'Christensenella', 'Acidaminococcus', 'Oribaculum', 'Oribaculum', 'Cellulosimicrobium', 'Enterorhabdus', 'Anarosalibacter', 'Murimonas', 'Terrisporobacter', 'Intestinimonas', 'Stenotrophomonas', 'Aminobacter', 'Bradyrhizobium', 'Curvibacter', 'Curvibacter', 'Herbaspirillum', 'Turicibacter', 'Rothia', 'Pedobacter', 'Parvibacter', 'Acidovorax', 'Aeromicrobium', 'Afipia', 'Aquabacterium', 'Aurantimonas', 'Azoarcus', 'Xanthomonas', 'Papillibacter', 'Lachnobacterium', 'Azospira', 'Beutenbergia', 'Micrococcus', 'Polaromonas', 'Pseudoxanthomonas', 'Psychrobacter', 'Sphingobium', 'Sphingomonas', 'Sphingopyxis', 'Sulfuritalea', 'Tsukamurella', 'Undibacterium', 'Bosea', 'Brevibacillus', 'Caulobacter', 'Comamonas', 'Craurococcus', 'Cupriavidus', 'Devosia', 'Dietzia', 'Duganella', 'Dyadobacter', 'Enhydrobacter', 'Hoeflea', 'Hydrotalea', 'Janthinobacterium', 'Bifidobacterium', 'Kocuria', 'Limnobacter', 'Mesorhizobium', 'Methylophilus', 'Methyloversatilis', 'Microlunatus', 'Niastella', 'Novosphingobium', 'Olivibacter', 'Paracoccus', 'Patulibacter', 'Wautersiella', 'Actinobaculum', 'Anaerotruncus']
    return genera

def get_catcount():
    catcount = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
    return catcount

def get_g_oxygen():
    g_oxygen = ['obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'facultative anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'facultative anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'microaerobe or anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'aerobe', 'facultative anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'facultative anaerobe', 'obligate anaerobe', 'anaerobe (unspecified)', 'anaerobe (unspecified)', 'obligate anaerobe', 'not indicated', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'facultative anaerobe', 'obligate anaerobe', 'facultative anaerobe', 'facultative anaerobe', 'facultative anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'facultative anaerobe', 'not indicated', 'aerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'obligate anaerobe', 'aerobe', 'obligate anaerobe', 'aerobe', 'obligate anaerobe', 'aerobe', 'obligate anaerobe', 'aerobe', 'microaerobe or anaerobe', 'aerobe', 'anaerobe (unspecified)', 'anaerobe (unspecified)', 'not indicated', 'anaerobe (unspecified)', 'anaerobe (unspecified)', 'obligate anaerobe', 'aerobe', 'facultative anaerobe', 'aerobe', 'obligate anaerobe', 'obligate anaerobe', 'facultative anaerobe', 'not indicated', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'not indicated', 'facultative anaerobe', 'obligate anaerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'obligate anaerobe', 'facultative anaerobe', 'not indicated', 'obligate anaerobe', 'obligate anaerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'not indicated', 'not indicated', 'aerobe', 'not indicated', 'not indicated', 'microaerobe or anaerobe', 'anaerobe (unspecified)', 'microaerobe or aerobe', 'obligate anaerobe', 'obligate anaerobe', 'aerobe', 'aerobe', 'not indicated', 'microaerobe', 'obligate anaerobe', 'not indicated', 'aerobe', 'obligate anaerobe', 'obligate anaerobe', 'microaerobe', 'microaerobe or aerobe', 'aerobe', 'aerobe', 'aerobe', 'aerobe', 'aerobe', 'aerobe', 'aerobe', 'facultative anaerobe', 'aerobe', 'not indicated', 'aerobe', 'aerobe', 'not indicated', 'aerobe', 'aerobe', 'not indicated', 'aerobe', 'aerobe', 'aerobe', 'aerobe', 'facultative anaerobe', 'aerobe', 'aerobe', 'aerobe', 'anaerobe (unspecified)', 'aerobe', 'obligate anaerobe', 'aerobe', 'aerobe', 'not indicated', 'aerobe', 'aerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'aerobe', 'not indicated', 'facultative anaerobe', 'obligate anaerobe']
    return g_oxygen

def get_g_morph():
    g_morph = ['rod/ bacilli', 'rod/ bacilli', 'oval-shaped/ coccobaccili', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'cocci or oval-shaped', 'slightly curved rods', 'rod/ bacilli', 'rods or oval-shaped', 'not indicated', 'rod/ bacilli', 'rods or slightly curved rods', 'fusiform', 'not indicated', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'cocci', 'rod/ bacilli', 'rod/ bacilli', 'oval-shaped/ coccobaccili', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'cocci', 'not indicated', 'cocci', 'rods or oval-shaped', 'cocci', 'slightly curved rods', 'slightly curved rods', 'cocci or oval-shaped', 'rod/ bacilli', 'ovoid', 'rod/ bacilli', 'cocci', 'rod/ bacilli', 'cocci', 'rod/ bacilli', 'rod/ bacilli', 'pleomorphic', 'not indicated', 'rod/ bacilli', 'cocci', 'ovoid', 'rod/ bacilli', 'rods or slightly curved rods', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'cocci', 'rod/ bacilli', 'rod/ bacilli', 'cocci or oval-shaped', 'not indicated', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'oval-shaped/ coccobaccili', 'not indicated', 'rod/ bacilli', 'rod/ bacilli', 'slightly curved rods', 'rods or slightly curved rods', 'not indicated', 'rods, cocci, or oval-shaped', 'rod/ bacilli', 'rod/ bacilli', 'cocci', 'rods or slightly curved rods', 'rods, cocci, or oval-shaped', 'rod/ bacilli', 'rods, cocci, or oval-shaped', 'oval-shaped/ coccobaccili', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'cocci or oval-shaped', 'rod/ bacilli', 'rod/ bacilli', 'slightly curved rods', 'rod/ bacilli', 'rod/ bacilli', 'oval-shaped/ coccobaccili', 'rods or slightly curved rods', 'not indicated', 'not indicated', 'rod/ bacilli', 'rod/ bacilli', 'slightly curved rods', 'slightly curved rods', 'slightly curved rods', 'rod/ bacilli', 'rods or cocci', 'rod/ bacilli', 'rod/ bacilli', 'rods or slightly curved rods', 'rods or cocci', 'rod/ bacilli', 'rod/ bacilli', 'not indicated', 'rods or slightly curved rods', 'rods or slightly curved rods', 'rod/ bacilli', 'rod/ bacilli', 'slightly curved rods', 'rods or cocci', 'cocci', 'rod/ bacilli', 'rod/ bacilli', 'oval-shaped/ coccobaccili', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'slightly curved rods', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'not indicated', 'rods or slightly curved rods', 'cocci', 'rod/ bacilli', 'rod/ bacilli', 'rods or cocci', 'rod/ bacilli', 'rods or cocci', 'rods or cocci', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'not indicated', 'cocci', 'slightly curved rods', 'rod/ bacilli', 'rods or slightly curved rods', 'rod/ bacilli', 'cocci', 'not indicated', 'rod/ bacilli', 'rod/ bacilli', 'cocci', 'rod/ bacilli', 'rod/ bacilli', 'rods or slightly curved rods', 'rod/ bacilli']
    return g_morph

def get_g_motil():
    g_motil = ['non-motile', 'non-motile', 'non-motile', 'not indicated', 'not indicated', 'non-motile', 'non-motile', 'motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'motile', 'non-motile', 'non-motile', 'variable', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'not indicated', 'motile', 'non-motile', 'not indicated', 'not indicated', 'non-motile', 'variable', 'motile', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'motile', 'motile', 'non-motile', 'non-motile', 'motile', 'motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'not indicated', 'non-motile', 'variable', 'non-motile', 'motile', 'motile', 'not indicated', 'non-motile', 'motile', 'non-motile', 'non-motile', 'motile', 'non-motile', 'variable', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'motile', 'variable', 'not indicated', 'motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'motile', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'motile', 'non-motile', 'motile', 'non-motile', 'motile', 'motile', 'motile', 'variable', 'variable', 'motile', 'not indicated', 'non-motile', 'variable', 'non-motile', 'motile', 'non-motile', 'motile', 'motile', 'not indicated', 'motile', 'variable', 'non-motile', 'not indicated', 'motile', 'non-motile', 'non-motile', 'motile', 'not indicated', 'non-motile', 'variable', 'variable', 'variable', 'motile', 'non-motile', 'non-motile', 'not indicated', 'motile', 'motile', 'motile', 'non-motile', 'motile', 'motile', 'not indicated', 'motile', 'non-motile', 'not indicated', 'motile', 'non-motile', 'motile', 'not indicated', 'not indicated', 'motile', 'motile', 'variable', 'non-motile', 'non-motile', 'motile', 'variable', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'not indicated']
    return g_motil

def get_g_spore():
    g_spore = ['non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'mixed', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'spore forming', 'non-spore forming', 'mixed', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'spore forming', 'non-spore forming', 'spore forming', 'spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'not indicated', 'not indicated', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming']
    return g_spore

def get_g_gram():
    g_gram = ['Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-variable', 'Gram-positive', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-variable', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-variable', 'Gram-variable', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-variable', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'not indicated', 'Gram-positive', 'not indicated', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-positive', 'Gram-positive', 'Gram-variable', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'not indicated', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-variable', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'not indicated', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-positive', 'Gram-negative', 'Gram-positive', 'Gram-positive']
    return g_gram

def get_g_bile():
    g_bile = ['growth in 20% bile', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'no growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated']
    return g_bile

def get_g_sacc():
    g_sacc = ['saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'not indicated', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'not indicated', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'saccharolytic', 'asaccharolytic', 'not indicated', 'not indicated', 'asaccharolytic', 'asaccharolytic', 'mixed', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'mixed', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'saccharolytic', 'asaccharolytic', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'not indicated', 'saccharolytic', 'asaccharolytic', 'saccharolytic', 'not indicated', 'not indicated', 'not indicated', 'saccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'asaccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'asaccharolytic', 'not indicated', 'asaccharolytic', 'saccharolytic', 'not indicated', 'not indicated', 'not indicated', 'asaccharolytic', 'saccharolytic', 'mixed', 'saccharolytic', 'saccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'saccharolytic', 'not indicated', 'asaccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'saccharolytic', 'saccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'saccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'asaccharolytic', 'asaccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'saccharolytic', 'not indicated', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'asaccharolytic', 'not indicated', 'not indicated', 'saccharolytic', 'saccharolytic']
    return g_sacc

def get_ox_choices():
    ox_choices = ['aerobe', 'facultative anaerobe', 'microaerobe', 'obligate anaerobe', 'anaerobe (unspecified)', 'microaerobe or anaerobe', 'microaerobe or aerobe', 'aerotolerant', 'variable', 'aerobe, microaerobe, or anaerobe', 'not indicated']
    return ox_choices

def get_morph_choices():
    morph_choices = ['rod/ bacilli', 'slightly curved rods', 'cocci', 'oval-shaped/ coccobaccili', 'fusiform', 'rods or oval-shaped', 'cocci or oval-shaped', 'rods or slightly curved rods', 'ovoid', 'pleomorphic', 'rods, cocci, or oval-shaped', 'rods or cocci', 'pleomorphic rods', 'pleomorphic cocci', 'spirals', 'spirals or cocci', 'spiral or curved rods', 'cocci or curved rods', 'curved rods', 'rods or curved rods', 'spirals, cocci, or curved rods', 'bent rods', 'cocci or ovoid', 'irregular rods', 'irregular', 'cocci, oval-shaped, or club-shaped rods', 'Y-shaped rods', 'slightly curved rods or club-shaped', 'irregular cocci', 'spiral, ring shaped, or Y-shaped rods', 'rods, oval-shaped, or club-shaped', 'club or Y-shaped', 'not indicated']
    return morph_choices

def get_species():
    species = [['Bacteroides vulgatus', 'Bacteroides acidifaciens', 'Bacteroides caecimuris', 'Bacteroides ovatus', 'Bacteroides xylanisolvens', 'Bacteroides amylophilus', 'Bacteroides barnesiae', 'Bacteroides bivius', 'Bacteroides buccae', 'Bacteroides caccae', 'Bacteroides caecicola', 'Bacteroides caecigallinarum', 'Bacteroides cellulosilyticus', 'Bacteroides cellulosolvens', 'Bacteroides chinchillae', 'Bacteroides clarus', 'Bacteroides coagulans', 'Bacteroides coprocola', 'Bacteroides coprophilus', 'Bacteroides coprosuis', 'Bacteroides corporis', 'Bacteroides disiens', 'Bacteroides distasonis', 'Bacteroides dorei', 'Bacteroides eggerthii', 'Bacteroides faecichinchillae', 'Bacteroides faecis', 'Bacteroides finegoldii', 'Bacteroides fluxus', 'Bacteroides forsythus', 'Bacteroides gallinaceum', 'Bacteroides gallinarum', 'Bacteroides gingivalis', 'Bacteroides gracilis', 'Bacteroides graminisolvens', 'Bacteroides heparinolyticus', 'Bacteroides intermedius', 'Bacteroides intestinalis', 'Bacteroides levii', 'Bacteroides loescheii', 'Bacteroides luti', 'Bacteroides massiliensis', 'Bacteroides microfusus', 'Bacteroides multiacidus', 'Bacteroides oleiciplenus', 'Bacteroides oralis', 'Bacteroides oris', 'Bacteroides oulorum'], ['Prevotella amnii', 'Prevotella copri'], ['Akkermansia muciniphila'], ['Anaerostripes butyraticus'], [], ['Barnesiella viscericola'], ['Blautia faecis', 'Blautia wexlerae', 'Blautia caecimuris', 'Blautia coccoides', 'Blautia stercoris', 'Blautia wexlerae'], ['Roseburia cecicola', 'Roseburia faecis', 'Roseburia hominis', 'Roseburia inulinivorans'], ['Alloprevotella tannerae', 'Alloprevotella rava'], ['Porphyromonas asaccharolytica', 'Porphyromonas gingivalis'], ['Paraprevotella clara'], ['Parabacteroides distasonis', 'Parabacteroides goldsteinii', 'Parabacteroides merdae', 'Parabacteroides johnsonii'], ['Oscillibacter valericigenes', 'Oscillibacter ruminantium'], ['Odoribacter denticanis'], ['Faecalibacterium prausnitzii'], [], ['Shuttleworthia satelles'], ['Sediminibacterium salmoneum'], ['Peptoniphilus asaccharolyticus'], ['Moryella indoligenes'], ['Holdemania filiformis'], ['Gordonibacter pamelaeae'], ['Dorea formicigenerans', 'Dorea longicatena'], ['Sutterella wadsworthensis'], ['Sporobacter termitidis'], ['Pseudoflavonifractor capillosus'], ['Flavonifractor plautii'], ['Achromobacter xylosoxidans'], ['Aerococcus christensenii'], ['Catenibacterium mitsuokai'], ['Collinsella aerofaciens'], ['Aggregatibacter actinomycetemcomitans'], ['Anaerococcus prevotii', 'Anaerococcus tetradius', 'Anaerococcus hydrogenalis', 'Anaerococcus lactolyticus', 'Anaerococcus octavius', 'Anaerococcus vaginalis'], ['Succinivibrio dextrinosolvens'], ['Lachnospira multipara'], ['Parasutterella excrementihominis'], ['Paralactobacillus selangorensis'], ['Oribacterium sinus'], ['Ochrobactrum anthropi'], ['Murdochiella asaccharolytica'], ['Mogibacterium pumilum', 'Mogibacterium vescum'], ['Megasphaera micronuciformis'], ['Hallella seregens'], ['Johnsonella ignava'], ['Granulicatella adiacens', 'Granulicatella elegans', 'Granulicatella balaenopterae'], [], ['Gardnerella vaginalis'], ['Facklamia hominis'], ['Enterococcus faecalis', 'Enterococcus faecium', 'Enterococcus gallinarum', 'Enterococcus hirae'], ['Dialister pneumosintes'], ['Delftia acidovorans'], [], [], [], ['Centipeda periodontii'], ['Butyricicoccus pullicaecorum'], ['Bulleidia extructa'], ['Brevundimonas diminuta', 'Brevundimonas vesicularis'], ['Anaeroglobus geminatus'], ['Arthrobacter agilis'], ['Atopobium deltae'], ['Bacillus thermoamylovorans'], ['Butyricimonas synergistica', 'Butyricimonas virosa'], [], ['Helicobacter pylori', 'Helicobacter mustelae'], ['Microbacterium immunditiarum'], ['Pseudobutyrivibrio ruminis'], ['Schwartzia succinivorans'], ['Succiniclasticum ruminis'], ['Tannerella forsythia'], ['Alistipes indistinctus', 'Alistipes inops', 'Alistipes onderdonkii', 'Alistipes shahii'], ['Catonella morbi'], ['Kingella orale'], ['Eremococcus coleocola'], ['Variovorax paradoxus'], [], ['Pyramidobacter piscolens'], [], ['Bordetella petrii'], [], ['Olsenella uli'], ['Jonquetella antrhopi'], ['Xylanibacter oryzae'], ['Eikenella corrodens'], ['Christensenella minuta'], ['Acidaminococcus fermentans'], ['Oribaculum catoniae'], ['Oribaculum catoniae'], ['Cellulosimicrobium cellulans'], ['Enterorhabdus mucosicola', 'Enterorhabdus caecimuris'], [], ['Murimonas intestini'], [], ['Intestinimonas butyriciproducens'], ['Stenotrophomonas maltophilia'], ['Aminobacter aminovorans', 'Aminobacter aganoensis'], ['Bradyrhizobium japonicum'], ['Curvibacter gracilis', 'Curvibacter gracilis'], ['Curvibacter gracilis', 'Curvibacter gracilis'], ['Herbaspirillum seropedicae'], ['Turicibacter sanguinis'], ['Rothia aeria', 'Rothia nasimurium'], ['Pedobacter heparinus'], ['Parvibacter caecicola'], ['Acidovorax  facilis'], ['Aeromicrobium'], ['Afipia felis'], ['Aquabacterium commune'], ['Aurantimonas coralicida'], ['Azoarcus indigens'], [], ['Papillibacter cinnamivorans'], ['Lachnobacterium bovis'], ['Azospira oryzae'], ['Beutenbergia cavernae'], [], ['Polaromonas vacuolata'], [], ['Psychrobacter immobilis'], ['Sphingobium yanoikuyae'], [], ['Sphingopyxis macrogoltabida'], ['Sulfuritalea hydrogenivorans'], ['Tsukamurella paurometabolum'], ['Undibacterium pigrum'], ['Bosea thiooxidans'], [], [], ['Comamonas terrigena'], ['Craurococcus roseus'], [], ['Devosia riboflavina'], ['Dietzia maris'], ['Duganella zoogloeoides'], ['Dyadobacter fermentans'], ['Enhydrobacter aerosaccus'], ['Hoeflea marina'], ['Hydrotalea flava'], [], ['Bifidobacterium dentium', 'Bifidobacterium animalis'], ['Kocuria rosea'], ['Limnobacter thiooxidans'], [], ['Methylophilus methylotrophus'], ['Methyloversatilis universalis'], ['Microlunatus phosphovorus'], ['Niastella koreensis'], [], ['Olivibacter sitiensis'], [], ['Patulibacter minatonensis'], ['Wautersiella falsenii'], ['Actinobaculum suis'], ['Anaerotruncus colihominis', 'Anaerotruncus colihominis']]
    return species

def get_s_oxygen():
    s_oxygen = [['not indicated', 'obligate anaerobe', 'obligate anaerobe', 'not indicated', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'not indicated', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'obligate anaerobe', 'not indicated', 'obligate anaerobe', 'anaerobe (unspecified)', 'anaerobe (unspecified)', 'anaerobe (unspecified)', 'obligate anaerobe', 'not indicated', 'anaerobe (unspecified)', 'obligate anaerobe', 'obligate anaerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'microaerobe or anaerobe', 'not indicated', 'obligate anaerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'anaerobe (unspecified)', 'obligate anaerobe', 'not indicated', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe'], ['anaerobe (unspecified)', 'anaerobe (unspecified)'], ['anaerobe (unspecified)'], ['anaerobe (unspecified)'], [], ['obligate anaerobe'], ['obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe'], ['obligate anaerobe', 'not indicated', 'obligate anaerobe', 'obligate anaerobe'], ['obligate anaerobe', 'obligate anaerobe'], ['obligate anaerobe', 'obligate anaerobe'], ['obligate anaerobe'], ['not indicated', 'not indicated', 'not indicated', 'obligate anaerobe'], ['obligate anaerobe', 'obligate anaerobe'], ['anaerobe (unspecified)'], ['obligate anaerobe'], [], ['obligate anaerobe'], ['aerobe'], ['not indicated'], ['obligate anaerobe'], ['anaerobe (unspecified)'], ['obligate anaerobe'], ['obligate anaerobe', 'obligate anaerobe'], ['not indicated'], ['obligate anaerobe'], ['obligate anaerobe'], ['anaerobe (unspecified)'], ['obligate anaerobe'], ['facultative anaerobe'], ['obligate anaerobe'], ['obligate anaerobe'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['anaerobe (unspecified)'], ['not indicated'], ['obligate anaerobe'], ['not indicated'], ['obligate anaerobe'], ['not indicated'], ['obligate anaerobe'], ['obligate anaerobe', 'obligate anaerobe'], ['obligate anaerobe'], ['obligate anaerobe'], ['anaerobe (unspecified)'], ['facultative anaerobe', 'facultative anaerobe', 'facultative anaerobe'], [], ['facultative anaerobe'], ['facultative anaerobe'], ['facultative anaerobe', 'not indicated', 'not indicated', 'facultative anaerobe'], ['anaerobe (unspecified)'], ['obligate anaerobe'], [], [], [], ['not indicated'], ['anaerobe (unspecified)'], ['obligate anaerobe'], ['aerobe', 'aerobe'], ['obligate anaerobe'], ['aerobe'], ['obligate anaerobe'], ['facultative anaerobe'], ['obligate anaerobe', 'obligate anaerobe'], [], ['aerobe', 'microaerobe or anaerobe'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['obligate anaerobe'], ['obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe', 'obligate anaerobe'], ['obligate anaerobe'], ['facultative anaerobe'], ['facultative anaerobe'], ['aerobe'], [], ['obligate anaerobe'], [], ['microaerobe or anaerobe'], [], ['anaerobe (unspecified)'], ['obligate anaerobe'], ['not indicated'], ['facultative anaerobe'], ['obligate anaerobe'], ['anaerobe (unspecified)'], ['obligate anaerobe'], ['obligate anaerobe'], ['facultative anaerobe'], ['not indicated', 'obligate anaerobe'], [], ['obligate anaerobe'], [], ['obligate anaerobe'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated', 'not indicated'], ['microaerobe or anaerobe'], ['obligate anaerobe'], ['aerobe', 'facultative anaerobe'], ['obligate anaerobe'], ['obligate anaerobe'], ['aerobe'], ['aerobe'], ['not indicated'], ['microaerobe'], ['obligate anaerobe'], ['not indicated'], [], ['anaerobe (unspecified)'], ['obligate anaerobe'], ['microaerobe'], ['microaerobe or aerobe'], [], ['aerobe'], [], ['aerobe'], ['aerobe'], [], ['aerobe'], ['facultative anaerobe'], ['aerobe'], ['not indicated'], ['aerobe'], [], [], ['aerobe'], ['aerobe'], [], ['aerobe'], ['aerobe'], ['aerobe'], ['aerobe'], ['facultative anaerobe'], ['aerobe'], ['aerobe'], [], ['anaerobe (unspecified)', 'anaerobe (unspecified)'], ['aerobe'], ['not indicated'], [], ['aerobe'], ['not indicated'], ['facultative anaerobe'], ['not indicated'], [], ['aerobe'], [], ['aerobe'], ['not indicated'], ['anaerobe (unspecified)'], ['anaerobe (unspecified)', 'anaerobe (unspecified)']]
    return s_oxygen

def get_s_morph():
    s_morph = [['oval-shaped/ coccobaccili', 'rod/ bacilli', 'rod/ bacilli', 'oval-shaped/ coccobaccili', 'rod/ bacilli', 'pleomorphic rods', 'pleomorphic rods', 'rod/ bacilli', 'rod/ bacilli', 'not indicated', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'oval-shaped/ coccobaccili', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'cocci', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'pleomorphic rods', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'fusiform', 'rod/ bacilli', 'rod/ bacilli', 'rods or oval-shaped', 'rod/ bacilli', 'rod/ bacilli', 'cocci', 'not indicated', 'rod/ bacilli', 'not indicated', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli', 'not indicated', 'rod/ bacilli', 'rod/ bacilli'], ['rod/ bacilli', 'rod/ bacilli'], ['oval-shaped/ coccobaccili'], ['rod/ bacilli'], [], ['rod/ bacilli'], ['oval-shaped/ coccobaccili', 'oval-shaped/ coccobaccili', 'cocci or oval-shaped', 'rods or oval-shaped', 'cocci', 'oval-shaped/ coccobaccili'], ['slightly curved rods', 'slightly curved rods', 'slightly curved rods', 'slightly curved rods'], ['rod/ bacilli', 'rod/ bacilli'], ['rods or oval-shaped', 'rods or oval-shaped'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'rod/ bacilli'], ['slightly curved rods', 'rods or slightly curved rods'], ['fusiform'], ['rod/ bacilli'], [], ['slightly curved rods'], ['rod/ bacilli'], ['not indicated'], ['rod/ bacilli'], ['rod/ bacilli'], ['oval-shaped/ coccobaccili'], ['rod/ bacilli', 'rod/ bacilli'], ['rod/ bacilli'], ['slightly curved rods'], ['rods or slightly curved rods'], ['rod/ bacilli'], ['rod/ bacilli'], ['cocci'], ['not indicated'], ['cocci'], ['rod/ bacilli'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['slightly curved rods'], ['slightly curved rods'], ['cocci or oval-shaped'], ['rod/ bacilli'], ['ovoid'], ['not indicated'], ['cocci'], ['rod/ bacilli', 'rod/ bacilli'], ['cocci'], ['rod/ bacilli'], ['rod/ bacilli'], ['rods, cocci, or oval-shaped', 'cocci', 'cocci'], [], ['pleomorphic'], ['ovoid'], ['ovoid', 'ovoid', 'cocci', 'ovoid'], ['rod/ bacilli'], ['slightly curved rods'], [], [], [], ['rod/ bacilli'], ['ovoid'], ['rod/ bacilli'], ['rod/ bacilli', 'rod/ bacilli'], ['cocci or oval-shaped'], ['ovoid'], ['rod/ bacilli'], ['rod/ bacilli'], ['rod/ bacilli', 'rod/ bacilli'], [], ['slightly curved rods', 'slightly curved rods'], ['rod/ bacilli'], ['slightly curved rods'], ['slightly curved rods'], ['rods or slightly curved rods'], ['fusiform'], ['rods or cocci', 'rod/ bacilli', 'rod/ bacilli', 'rod/ bacilli'], ['rod/ bacilli'], ['rods or oval-shaped'], ['cocci'], ['rods or slightly curved rods'], [], ['rod/ bacilli'], [], ['rods or oval-shaped'], [], ['rod/ bacilli'], ['rod/ bacilli'], ['rod/ bacilli'], ['rod/ bacilli'], ['rod/ bacilli'], ['cocci or oval-shaped'], ['rod/ bacilli'], ['rod/ bacilli'], ['rods or cocci'], ['rod/ bacilli', 'rod/ bacilli'], [], ['oval-shaped/ coccobaccili'], [], ['fusiform'], ['not indicated'], ['rod/ bacilli', 'rod/ bacilli'], ['rod/ bacilli'], ['slightly curved rods', 'slightly curved rods'], ['slightly curved rods', 'slightly curved rods'], ['slightly curved rods'], ['rod/ bacilli'], ['cocci or oval-shaped', 'cocci'], ['rod/ bacilli'], ['rod/ bacilli'], ['rods or slightly curved rods'], ['rods or cocci'], ['rod/ bacilli'], ['rod/ bacilli'], ['rod/ bacilli'], ['rods or slightly curved rods'], [], ['rod/ bacilli'], ['rod/ bacilli'], ['slightly curved rods'], ['rods or cocci'], [], ['rod/ bacilli'], [], ['oval-shaped/ coccobaccili'], ['rod/ bacilli'], [], ['rod/ bacilli'], ['slightly curved rods'], ['rods or slightly curved rods'], ['rod/ bacilli'], ['rod/ bacilli'], [], [], ['rods or slightly curved rods'], ['cocci'], [], ['rod/ bacilli'], ['rods or cocci'], ['rod/ bacilli'], ['rods or cocci'], ['rod/ bacilli'], ['rod/ bacilli'], ['rod/ bacilli'], [], ['rod/ bacilli', 'rod/ bacilli'], ['cocci'], ['slightly curved rods'], [], ['rods or slightly curved rods'], ['not indicated'], ['cocci'], ['not indicated'], [], ['not indicated'], [], ['rod/ bacilli'], ['not indicated'], ['pleomorphic'], ['rod/ bacilli', 'rod/ bacilli']]
    return s_morph

def get_s_motil():
    s_motil = [['non-motile', 'non-motile', 'not indicated', 'not indicated', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'not indicated', 'non-motile', 'not indicated', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'non-motile', 'not indicated', 'non-motile', 'not indicated', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile', 'non-motile'], ['non-motile', 'not indicated'], ['non-motile'], ['non-motile'], [], ['non-motile'], ['non-motile', 'not indicated', 'not indicated', 'non-motile', 'non-motile', 'not indicated'], ['motile', 'motile', 'motile', 'motile'], ['non-motile', 'non-motile'], ['non-motile', 'non-motile'], ['non-motile'], ['not indicated', 'not indicated', 'not indicated', 'non-motile'], ['motile', 'motile'], ['non-motile'], ['non-motile'], [], ['non-motile'], ['motile'], ['not indicated'], ['non-motile'], ['not indicated'], ['motile'], ['non-motile', 'non-motile'], ['not indicated'], ['motile'], ['non-motile'], ['variable'], ['motile'], ['non-motile'], ['non-motile'], ['non-motile'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated'], ['motile'], ['non-motile'], ['non-motile'], ['motile'], ['motile'], ['non-motile'], ['non-motile', 'non-motile'], ['non-motile'], ['non-motile'], ['not indicated'], ['non-motile', 'non-motile', 'non-motile'], [], ['non-motile'], ['non-motile'], ['variable', 'variable', 'non-motile', 'non-motile'], ['not indicated'], ['motile'], [], [], [], ['variable'], ['non-motile'], ['non-motile'], ['motile', 'motile'], ['not indicated'], ['variable'], ['non-motile'], ['motile'], ['non-motile', 'non-motile'], [], ['motile', 'motile'], ['non-motile'], ['motile'], ['motile'], ['non-motile'], ['non-motile'], ['not indicated', 'non-motile', 'not indicated', 'not indicated'], ['non-motile'], ['non-motile'], ['not indicated'], ['motile'], [], ['non-motile'], [], ['non-motile'], [], ['non-motile'], ['non-motile'], ['non-motile'], ['non-motile'], ['non-motile'], ['not indicated'], ['non-motile'], ['non-motile'], ['not indicated'], ['non-motile', 'non-motile'], [], ['non-motile'], [], ['non-motile'], ['motile'], ['motile', 'motile'], ['motile'], ['variable', 'variable'], ['variable', 'variable'], ['motile'], ['not indicated'], ['not indicated', 'non-motile'], ['motile'], ['non-motile'], ['motile'], ['non-motile'], ['motile'], ['motile'], ['motile'], ['motile'], [], ['non-motile'], ['non-motile'], ['motile'], ['non-motile'], [], ['motile'], [], ['non-motile'], ['variable'], [], ['variable'], ['motile'], ['non-motile'], ['non-motile'], ['motile'], [], [], ['motile'], ['motile'], [], ['motile'], ['not indicated'], ['motile'], ['non-motile'], ['non-motile'], ['motile'], ['non-motile'], [], ['non-motile', 'non-motile'], ['not indicated'], ['motile'], [], ['motile'], ['not indicated'], ['non-motile'], ['not indicated'], [], ['not indicated'], [], ['motile'], ['not indicated'], ['non-motile'], ['not indicated', 'not indicated']]
    return s_motil

def get_s_spore():
    s_spore = [['not indicated', 'non-spore forming', 'not indicated', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'non-spore forming', 'not indicated', 'non-spore forming', 'non-spore forming'], ['non-spore forming', 'non-spore forming'], ['not indicated'], ['spore forming'], [], ['non-spore forming'], ['non-spore forming', 'spore forming', 'not indicated', 'non-spore forming', 'non-spore forming', 'non-spore forming'], ['non-spore forming', 'not indicated', 'not indicated', 'not indicated'], ['not indicated', 'not indicated'], ['non-spore forming', 'non-spore forming'], ['non-spore forming'], ['not indicated', 'not indicated', 'not indicated', 'non-spore forming'], ['non-spore forming', 'non-spore forming'], ['non-spore forming'], ['non-spore forming'], [], ['non-spore forming'], ['not indicated'], ['not indicated'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming', 'non-spore forming'], ['not indicated'], ['spore forming'], ['non-spore forming'], ['mixed'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['non-spore forming'], ['not indicated'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['not indicated'], ['not indicated'], ['non-spore forming', 'non-spore forming'], ['not indicated'], ['non-spore forming'], ['not indicated'], ['non-spore forming', 'non-spore forming', 'non-spore forming'], [], ['not indicated'], ['non-spore forming'], ['not indicated', 'not indicated', 'not indicated', 'not indicated'], ['non-spore forming'], ['non-spore forming'], [], [], [], ['not indicated'], ['not indicated'], ['non-spore forming'], ['not indicated', 'not indicated'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming', 'non-spore forming'], [], ['not indicated', 'not indicated'], ['non-spore forming'], ['non-spore forming'], ['not indicated'], ['non-spore forming'], ['not indicated'], ['non-spore forming', 'non-spore forming', 'not indicated', 'not indicated'], ['non-spore forming'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], [], ['non-spore forming'], [], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['not indicated'], ['non-spore forming', 'non-spore forming'], [], ['non-spore forming'], [], ['spore forming'], ['non-spore forming'], ['non-spore forming', 'non-spore forming'], ['non-spore forming'], ['not indicated', 'not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['non-spore forming'], ['not indicated', 'not indicated'], ['not indicated'], ['non-spore forming'], ['not indicated'], ['non-spore forming'], ['not indicated'], ['non-spore forming'], ['non-spore forming'], ['not indicated'], [], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], [], ['not indicated'], [], ['non-spore forming'], ['non-spore forming'], [], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], [], [], ['non-spore forming'], ['not indicated'], [], ['non-spore forming'], ['non-spore forming'], ['non-spore forming'], ['not indicated'], ['not indicated'], ['non-spore forming'], ['not indicated'], [], ['non-spore forming', 'non-spore forming'], ['non-spore forming'], ['not indicated'], [], ['non-spore forming'], ['not indicated'], ['non-spore forming'], ['not indicated'], [], ['not indicated'], [], ['non-spore forming'], ['not indicated'], ['non-spore forming'], ['non-spore forming', 'non-spore forming']]
    return s_spore

def get_s_gram():
    s_gram = [['Gram-negative', 'Gram-negative', 'Gram-negative', 'not indicated', 'Gram-negative', 'not indicated', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'not indicated', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'not indicated', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'not indicated', 'Gram-negative', 'not indicated', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'not indicated', 'Gram-negative', 'not indicated', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative', 'Gram-negative'], ['Gram-negative', 'Gram-negative'], ['Gram-negative'], ['Gram-positive'], [], ['Gram-negative'], ['Gram-positive', 'Gram-positive', 'Gram-positive', 'Gram-positive', 'Gram-positive', 'Gram-positive'], ['Gram-negative', 'Gram-variable', 'Gram-variable', 'Gram-variable'], ['Gram-negative', 'Gram-negative'], ['Gram-negative', 'Gram-negative'], ['Gram-negative'], ['not indicated', 'not indicated', 'not indicated', 'Gram-negative'], ['Gram-negative', 'Gram-negative'], ['Gram-negative'], ['Gram-negative'], [], ['Gram-positive'], ['Gram-negative'], ['not indicated'], ['Gram-variable'], ['Gram-positive'], ['Gram-positive'], ['Gram-positive', 'Gram-variable'], ['Gram-negative'], ['Gram-positive'], ['Gram-negative'], ['Gram-variable'], ['Gram-negative'], ['Gram-positive'], ['Gram-positive'], ['Gram-positive'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['Gram-negative'], ['Gram-variable'], ['Gram-negative'], ['Gram-positive'], ['Gram-positive'], ['not indicated'], ['Gram-positive'], ['Gram-positive', 'Gram-positive'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-positive', 'Gram-positive', 'Gram-positive'], [], ['Gram-variable'], ['Gram-positive'], ['not indicated', 'not indicated', 'not indicated', 'Gram-positive'], ['Gram-negative'], ['Gram-negative'], [], [], [], ['Gram-negative'], ['Gram-positive'], ['Gram-positive'], ['Gram-negative', 'Gram-negative'], ['Gram-negative'], ['Gram-positive'], ['Gram-positive'], ['Gram-positive'], ['Gram-negative', 'Gram-negative'], [], ['Gram-negative', 'Gram-negative'], ['Gram-positive'], ['Gram-negative'], ['not indicated'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative', 'Gram-negative', 'not indicated', 'not indicated'], ['Gram-negative'], ['Gram-negative'], ['Gram-positive'], ['not indicated'], [], ['Gram-negative'], [], ['Gram-negative'], [], ['Gram-positive'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['not indicated'], ['Gram-positive', 'Gram-positive'], [], ['Gram-positive'], [], ['Gram-positive'], ['Gram-negative'], ['Gram-negative', 'Gram-negative'], ['Gram-negative'], ['Gram-negative', 'Gram-negative'], ['Gram-negative', 'Gram-negative'], ['Gram-negative'], ['Gram-positive'], ['Gram-positive', 'Gram-positive'], ['Gram-negative'], ['Gram-positive'], ['Gram-negative'], ['Gram-positive'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], [], ['Gram-positive'], ['Gram-positive'], ['Gram-negative'], ['Gram-positive'], [], ['Gram-negative'], [], ['Gram-negative'], ['Gram-negative'], [], ['Gram-positive'], ['Gram-negative'], ['Gram-positive'], ['Gram-negative'], ['Gram-negative'], [], [], ['Gram-negative'], ['Gram-negative'], [], ['Gram-negative'], ['Gram-positive'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], ['Gram-negative'], [], ['Gram-positive', 'Gram-positive'], ['Gram-positive'], ['not indicated'], [], ['Gram-negative'], ['not indicated'], ['Gram-positive'], ['not indicated'], [], ['not indicated'], [], ['Gram-positive'], ['not indicated'], ['Gram-positive'], ['Gram-positive', 'Gram-positive']]
    return s_gram

def get_s_bile():
    s_bile = [['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'growth in 20% bile', 'no growth in 20% bile', 'no growth in 20% bile', 'not indicated', 'no growth in 20% bile', 'no growth in 20% bile', 'not indicated', 'no growth in 20% bile', 'growth in 20% bile', 'not indicated', 'not indicated', 'growth in 20% bile', 'growth in 20% bile', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'growth in 20% bile', 'not indicated', 'growth in 20% bile', 'no growth in 20% bile', 'growth in 20% bile', 'not indicated', 'not indicated', 'growth in 20% bile', 'growth in 20% bile', 'not indicated', 'not indicated', 'no growth in 20% bile', 'no growth in 20% bile', 'not indicated', 'growth in 20% bile', 'no growth in 20% bile', 'not indicated', 'no growth in 20% bile', 'growth in 20% bile', 'growth in 20% bile', 'not indicated', 'not indicated', 'no growth in 20% bile', 'no growth in 20% bile', 'not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated', 'no growth in 20% bile'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'growth in 20% bile'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], [], ['no growth in 20% bile'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], ['no growth in 20% bile'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated'], ['not indicated'], ['growth in 20% bile'], ['not indicated'], ['not indicated'], ['not indicated'], ['no growth in 20% bile'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], ['no growth in 20% bile'], ['not indicated', 'not indicated', 'not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated'], ['not indicated'], [], [], [], ['not indicated'], ['not indicated'], ['no growth in 20% bile'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['no growth in 20% bile', 'no growth in 20% bile'], [], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['no growth in 20% bile', 'not indicated', 'growth in 20% bile', 'growth in 20% bile'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['no growth in 20% bile'], [], ['not indicated'], [], ['not indicated'], ['not indicated'], ['no growth in 20% bile'], ['not indicated'], ['no growth in 20% bile'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated'], [], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], [], ['not indicated'], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], [], ['not indicated'], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated']]
    return s_bile

def get_s_sacc():
    s_sacc = [['saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'not indicated', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'not indicated', 'saccharolytic', 'saccharolytic', 'asaccharolytic', 'asaccharolytic', 'saccharolytic', 'saccharolytic', 'not indicated', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic'], ['saccharolytic', 'saccharolytic'], ['not indicated'], ['not indicated'], [], ['saccharolytic'], ['saccharolytic', 'not indicated', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic'], ['saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic'], ['saccharolytic', 'saccharolytic'], ['not indicated', 'not indicated'], ['saccharolytic'], ['saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic'], ['saccharolytic', 'not indicated'], ['not indicated'], ['saccharolytic'], [], ['saccharolytic'], ['saccharolytic'], ['asaccharolytic'], ['saccharolytic'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['asaccharolytic'], ['asaccharolytic'], ['asaccharolytic'], ['asaccharolytic'], ['not indicated'], ['not indicated'], ['not indicated'], ['saccharolytic'], ['mixed', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic', 'saccharolytic'], ['saccharolytic'], ['saccharolytic'], ['asaccharolytic'], ['saccharolytic'], ['saccharolytic'], ['saccharolytic'], ['asaccharolytic'], ['not indicated', 'not indicated'], ['not indicated'], ['saccharolytic'], ['asaccharolytic'], ['not indicated', 'not indicated', 'not indicated'], [], ['saccharolytic'], ['not indicated'], ['saccharolytic', 'saccharolytic', 'not indicated', 'saccharolytic'], ['not indicated'], ['not indicated'], [], [], [], ['not indicated'], ['not indicated'], ['saccharolytic'], ['not indicated', 'not indicated'], ['mixed'], ['not indicated'], ['not indicated'], ['saccharolytic'], ['saccharolytic', 'saccharolytic'], [], ['not indicated', 'not indicated'], ['not indicated'], ['saccharolytic'], ['asaccharolytic'], ['asaccharolytic'], ['not indicated'], ['saccharolytic', 'asaccharolytic', 'saccharolytic', 'saccharolytic'], ['saccharolytic'], ['not indicated'], ['saccharolytic'], ['saccharolytic'], [], ['asaccharolytic'], [], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['asaccharolytic'], ['saccharolytic'], ['mixed'], ['saccharolytic'], ['saccharolytic'], ['saccharolytic'], ['not indicated', 'not indicated'], [], ['saccharolytic'], [], ['saccharolytic'], ['not indicated'], ['asaccharolytic', 'asaccharolytic'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['saccharolytic'], ['not indicated', 'saccharolytic'], ['saccharolytic'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], ['not indicated'], ['saccharolytic'], ['saccharolytic'], [], ['not indicated'], [], ['not indicated'], ['asaccharolytic'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], [], ['not indicated'], ['not indicated'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], [], ['saccharolytic', 'saccharolytic'], ['saccharolytic'], ['not indicated'], [], ['saccharolytic'], ['asaccharolytic'], ['saccharolytic'], ['saccharolytic'], [], ['saccharolytic'], [], ['asaccharolytic'], ['saccharolytic'], ['saccharolytic'], ['not indicated', 'saccharolytic']]
    return s_sacc

def get_cat():
    cat = [['not indicated', 'not indicated', 'not indicated', 'not indicated', 'catalase negative', 'not indicated', 'catalase negative', 'not indicated', 'not indicated', 'not indicated', 'catalase negative', 'catalase negative', 'catalase negative', 'catalase negative', 'catalase negative', 'not indicated', 'not indicated', 'catalase negative', 'not indicated', 'catalase negative', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'catalase negative', 'catalase negative', 'not indicated', 'not indicated', 'not indicated', 'catalase negative', 'catalase negative', 'catalase negative', 'catalase negative', 'not indicated', 'catalase negative', 'not indicated', 'not indicated', 'catalase negative', 'not indicated', 'catalase negative', 'catalase negative', 'catalase negative', 'not indicated', 'not indicated', 'catalase negative', 'not indicated', 'not indicated'], ['not indicated', 'catalase negative'], ['not indicated'], ['not indicated'], [], ['catalase negative'], ['catalase negative', 'catalase negative', 'not indicated', 'not indicated', 'catalase negative', 'catalase negative'], ['catalase negative', 'catalase negative', 'catalase negative', 'catalase negative'], ['not indicated', 'not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['catalase positive', 'not indicated', 'catalase negative', 'catalase positive'], ['catalase negative', 'catalase negative'], ['catalase positive'], ['not indicated'], [], ['catalase negative'], ['catalase positive'], ['not indicated'], ['catalase negative'], ['catalase negative'], ['catalase positive'], ['not indicated', 'catalase negative'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['catalase positive'], ['catalase negative'], ['not indicated'], ['not indicated'], ['catalase positive'], ['not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated'], ['catalase negative'], ['catalase negative'], ['catalase negative'], ['catalase negative'], ['catalase positive'], ['catalase negative'], ['catalase negative', 'catalase negative'], ['catalase negative'], ['not indicated'], ['catalase negative'], ['catalase negative', 'catalase negative', 'catalase negative'], [], ['not indicated'], ['catalase negative'], ['not indicated', 'not indicated', 'not indicated', 'catalase negative'], ['not indicated'], ['catalase positive'], [], [], [], ['not indicated'], ['not indicated'], ['catalase negative'], ['not indicated', 'not indicated'], ['catalase negative'], ['catalase positive'], ['not indicated'], ['catalase positive'], ['catalase negative', 'catalase positive'], [], ['catalase positive', 'catalase positive'], ['catalase positive'], ['not indicated'], ['catalase negative'], ['catalase negative'], ['catalase negative'], ['catalase positive', 'catalase negative', 'catalase negative', 'catalase negative'], ['not indicated'], ['catalase negative'], ['catalase negative'], ['catalase positive'], [], ['catalase negative'], [], ['not indicated'], [], ['catalase negative'], ['catalase negative'], ['catalase negative'], ['catalase negative'], ['catalase negative'], ['not indicated'], ['not indicated'], ['not indicated'], ['catalase positive'], ['catalase negative', 'not indicated'], [], ['not indicated'], [], ['not indicated'], ['not indicated'], ['catalase positive', 'catalase positive'], ['not indicated'], ['catalase positive', 'catalase positive'], ['catalase positive', 'catalase positive'], ['catalase positive'], ['catalase negative'], ['not indicated', 'catalase positive'], ['catalase positive'], ['not indicated'], ['not indicated'], ['catalase positive'], ['catalase positive'], ['catalase negative'], ['catalase positive'], ['catalase positive'], [], ['not indicated'], ['not indicated'], ['catalase positive'], ['catalase positive'], [], ['catalase positive'], [], ['catalase positive'], ['catalase positive'], [], ['catalase positive'], ['catalase negative'], ['catalase positive'], ['not indicated'], ['catalase positive'], [], [], ['catalase positive'], ['catalase positive'], [], ['catalase positive'], ['catalase positive'], ['catalase positive'], ['catalase positive'], ['catalase positive'], ['catalase positive'], ['catalase positive'], [], ['catalase negative', 'catalase negative'], ['catalase positive'], ['not indicated'], [], ['catalase positive'], ['catalase positive'], ['catalase positive'], ['not indicated'], [], ['not indicated'], [], ['catalase positive'], ['not indicated'], ['catalase negative'], ['catalase negative', 'catalase negative']]
    return cat

def get_urease():
    urease = [['not indicated', 'not indicated', 'not indicated', 'not indicated', 'urease negative', 'not indicated', 'urease negative', 'not indicated', 'not indicated', 'not indicated', 'urease negative', 'urease negative', 'not indicated', 'urease negative', 'urease negative', 'not indicated', 'not indicated', 'urease negative', 'urease negative', 'urease negative', 'not indicated', 'not indicated', 'not indicated', 'urease negative', 'not indicated', 'urease negative', 'urease negative', 'urease negative', 'not indicated', 'not indicated', 'urease negative', 'urease negative', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'urease negative', 'not indicated', 'not indicated', 'urease negative', 'urease negative', 'urease negative', 'not indicated', 'not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated', 'urease negative'], ['not indicated'], ['urease negative'], [], ['urease negative'], ['urease negative', 'urease positive', 'not indicated', 'not indicated', 'not indicated', 'urease positive'], ['not indicated', 'not indicated', 'not indicated', 'not indicated'], ['urease negative', 'urease negative'], ['not indicated', 'not indicated'], ['not indicated'], ['urease negative', 'urease negative', 'urease negative', 'urease negative'], ['not indicated', 'not indicated'], ['not indicated'], ['not indicated'], [], ['not indicated'], ['urease negative'], ['urease negative'], ['urease negative'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated'], ['urease negative'], ['not indicated'], ['not indicated'], ['not indicated'], ['urease negative'], ['urease negative'], ['not indicated'], ['not indicated'], ['not indicated'], ['urease variable', 'urease positive', 'urease variable', 'urease positive', 'urease negative', 'urease negative'], ['not indicated'], ['not indicated'], ['urease negative'], ['not indicated'], ['not indicated'], ['not indicated'], ['urease negative'], ['urease negative', 'urease negative'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated', 'urease negative', 'urease positive'], [], ['urease negative'], ['urease variable'], ['not indicated', 'not indicated', 'not indicated', 'not indicated'], ['not indicated'], ['not indicated'], [], [], [], ['not indicated'], ['urease positive'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['urease negative'], ['urease negative'], ['not indicated'], ['urease negative', 'urease negative'], [], ['urease positive', 'urease positive'], ['not indicated'], ['not indicated'], ['urease negative'], ['urease negative'], ['not indicated'], ['urease negative', 'urease negative', 'not indicated', 'not indicated'], ['not indicated'], ['urease negative'], ['urease variable'], ['not indicated'], [], ['not indicated'], [], ['not indicated'], [], ['urease negative'], ['not indicated'], ['urease negative'], ['urease negative'], ['urease negative'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated', 'not indicated'], [], ['not indicated'], [], ['not indicated'], ['not indicated'], ['urease negative', 'urease negative'], ['not indicated'], ['urease variable', 'not indicated'], ['urease variable', 'not indicated'], ['urease positive'], ['not indicated'], ['not indicated', 'not indicated'], ['not indicated'], ['urease negative'], ['urease variable'], ['urease negative'], ['urease positive'], ['not indicated'], ['urease positive'], ['urease variable'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['urease negative'], [], ['urease positive'], [], ['urease variable'], ['urease negative'], [], ['not indicated'], ['not indicated'], ['not indicated'], ['not indicated'], ['urease negative'], [], [], ['urease negative'], ['not indicated'], [], ['urease positive'], ['not indicated'], ['urease positive'], ['not indicated'], ['not indicated'], ['urease variable'], ['urease negative'], [], ['not indicated', 'not indicated'], ['urease negative'], ['not indicated'], [], ['urease positive'], ['urease negative'], ['not indicated'], ['urease positive'], [], ['not indicated'], [], ['urease negative'], ['urease positive'], ['urease positive'], ['urease negative', 'not indicated']]
    return urease

